
[{"D:\\molly\\Bootcamp\\Projects\\Project3\\ThePlacesYoullGo\\client\\src\\index.js":"1","D:\\molly\\Bootcamp\\Projects\\Project3\\ThePlacesYoullGo\\client\\src\\App.js":"2","D:\\molly\\Bootcamp\\Projects\\Project3\\ThePlacesYoullGo\\client\\src\\reportWebVitals.js":"3","D:\\molly\\Bootcamp\\Projects\\Project3\\ThePlacesYoullGo\\client\\src\\pages\\Login.js":"4","D:\\molly\\Bootcamp\\Projects\\Project3\\ThePlacesYoullGo\\client\\src\\pages\\Home.js":"5","D:\\molly\\Bootcamp\\Projects\\Project3\\ThePlacesYoullGo\\client\\src\\pages\\Places.js":"6","D:\\molly\\Bootcamp\\Projects\\Project3\\ThePlacesYoullGo\\client\\src\\pages\\Profile.js":"7","D:\\molly\\Bootcamp\\Projects\\Project3\\ThePlacesYoullGo\\client\\src\\pages\\Bucket.js":"8","D:\\molly\\Bootcamp\\Projects\\Project3\\ThePlacesYoullGo\\client\\src\\pages\\Signup.js":"9","D:\\molly\\Bootcamp\\Projects\\Project3\\ThePlacesYoullGo\\client\\src\\components\\Navbar.js":"10","D:\\molly\\Bootcamp\\Projects\\Project3\\ThePlacesYoullGo\\client\\src\\components\\Footer.js":"11","D:\\molly\\Bootcamp\\Projects\\Project3\\ThePlacesYoullGo\\client\\src\\components\\Carousel.js":"12","D:\\molly\\Bootcamp\\Projects\\Project3\\ThePlacesYoullGo\\client\\src\\utils\\mutations.js":"13","D:\\molly\\Bootcamp\\Projects\\Project3\\ThePlacesYoullGo\\client\\src\\utils\\API.js":"14","D:\\molly\\Bootcamp\\Projects\\Project3\\ThePlacesYoullGo\\client\\src\\utils\\auth.js":"15","D:\\molly\\Bootcamp\\Projects\\Project3\\ThePlacesYoullGo\\client\\src\\components\\bucket\\BucketForm.js":"16","D:\\molly\\Bootcamp\\Projects\\Project3\\ThePlacesYoullGo\\client\\src\\components\\bucket\\Bucket.js":"17","D:\\molly\\Bootcamp\\Projects\\Project3\\ThePlacesYoullGo\\client\\src\\utils\\queries.js":"18","D:\\molly\\Bootcamp\\Projects\\Project3\\ThePlacesYoullGo\\client\\src\\pages\\MyPlaces.js":"19","D:\\molly\\Bootcamp\\Projects\\Project3\\ThePlacesYoullGo\\client\\src\\utils\\localstorage.js":"20"},{"size":515,"mtime":1637515495686,"results":"21","hashOfConfig":"22"},{"size":2059,"mtime":1637529877612,"results":"23","hashOfConfig":"22"},{"size":375,"mtime":1637515495689,"results":"24","hashOfConfig":"22"},{"size":2597,"mtime":1637519337682,"results":"25","hashOfConfig":"22"},{"size":293,"mtime":1637515495688,"results":"26","hashOfConfig":"22"},{"size":3318,"mtime":1637539688741,"results":"27","hashOfConfig":"22"},{"size":428,"mtime":1637515495688,"results":"28","hashOfConfig":"22"},{"size":2174,"mtime":1637515495687,"results":"29","hashOfConfig":"22"},{"size":6501,"mtime":1637535561534,"results":"30","hashOfConfig":"22"},{"size":1689,"mtime":1637541030002,"results":"31","hashOfConfig":"22"},{"size":379,"mtime":1637515495638,"results":"32","hashOfConfig":"22"},{"size":1545,"mtime":1637540494552,"results":"33","hashOfConfig":"22"},{"size":1172,"mtime":1637529645319,"results":"34","hashOfConfig":"22"},{"size":377,"mtime":1637537335780,"results":"35","hashOfConfig":"22"},{"size":1084,"mtime":1637515495691,"results":"36","hashOfConfig":"22"},{"size":2649,"mtime":1637515495640,"results":"37","hashOfConfig":"22"},{"size":1110,"mtime":1637515495640,"results":"38","hashOfConfig":"22"},{"size":406,"mtime":1637538889670,"results":"39","hashOfConfig":"22"},{"size":1314,"mtime":1637538661063,"results":"40","hashOfConfig":"22"},{"size":435,"mtime":1637527303438,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"1kb74un",{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"44"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"44"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"44"},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"D:\\molly\\Bootcamp\\Projects\\Project3\\ThePlacesYoullGo\\client\\src\\index.js",[],["87","88"],"D:\\molly\\Bootcamp\\Projects\\Project3\\ThePlacesYoullGo\\client\\src\\App.js",[],"D:\\molly\\Bootcamp\\Projects\\Project3\\ThePlacesYoullGo\\client\\src\\reportWebVitals.js",[],"D:\\molly\\Bootcamp\\Projects\\Project3\\ThePlacesYoullGo\\client\\src\\pages\\Login.js",[],"D:\\molly\\Bootcamp\\Projects\\Project3\\ThePlacesYoullGo\\client\\src\\pages\\Home.js",[],"D:\\molly\\Bootcamp\\Projects\\Project3\\ThePlacesYoullGo\\client\\src\\pages\\Places.js",["89","90"],"import React, { useState, useEffect } from 'react';\r\nimport { useMutation } from '@apollo/client';\r\nimport \"../components/css/Places_style.css\";\r\nimport {SAVE_CITY} from '../utils/mutations';\r\nimport Auth from '../utils/auth';\r\nimport { searchCities } from '../utils/API';\r\nimport { Form, Button, Card } from 'react-bootstrap';\r\nimport { saveCityIds, getSavedCityIds } from '../utils/localstorage';\r\n\r\nconst SearchCity = () => {\r\n    const [searchedCities, setSearchedCities] = useState([]);\r\n\r\n    const [searchInput, setSearchInput] = useState('');\r\n\r\n    const [savedCityIds, setSavedCityIds] = useState(getSavedCityIds());\r\n\r\n    const [saveCity, {error}] = useMutation(SAVE_CITY);\r\n\r\n    useEffect(() => {\r\n        return () => saveCityIds(savedCityIds);\r\n      });\r\n\r\n    const handleFormSubmit = async (event) => {\r\n        event.preventDefault();\r\n\r\n        if(!searchInput) {\r\n            return false\r\n        }\r\n        try {\r\n            const response = await searchCities(searchInput);\r\n            if (!response.ok) {\r\n                throw new Error('Something went wrong!');\r\n            }\r\n            console.log(response);\r\n            const { data } = await response.json();\r\n\r\n            const cityData = data.map((city) => ({\r\n                cityId: city.id,\r\n                city: city.name,\r\n                country: city.country,\r\n                population: city.population\r\n            }));\r\n\r\n            setSearchedCities(cityData);\r\n            console.log(setSearchedCities);\r\n            setSearchInput('');\r\n        } catch (err) {\r\n            console.error(err);\r\n        }\r\n    };\r\n\r\n    const handleSaveCity = async (cityId) => {\r\n        const cityToSave = searchedCities.find((city) => city.cityId === cityId);\r\n        console.log(searchedCities);\r\n        try {\r\n          await saveCity({\r\n            variables: { ...cityToSave}\r\n          });\r\n    \r\n          setSavedCityIds([...savedCityIds, cityToSave.cityId]);\r\n        } catch (err) {\r\n          console.error(err);\r\n        }\r\n      };\r\n\r\n    return (\r\n        <div className=\"searchBar\">\r\n            <div>\r\n                <h1>The Places You'll Go</h1>\r\n                <h6>Search for a City</h6>\r\n              <Form onSubmit={handleFormSubmit}>\r\n                  <Form.Control \r\n                  name='searchInput'\r\n                  value={searchInput}\r\n                  onChange={(e) => setSearchInput(e.target.value)}\r\n                  type=\"text\"\r\n                  className=\"mb-2\"/>\r\n                  <Button type=\"submit\" className=\"mb-2\">Submit</Button>\r\n              </Form>\r\n            </div>\r\n            <div>\r\n                {searchedCities.map((city) => {\r\n                    return (\r\n                        <Card key={city.cityId} border='dark'>\r\n                            <Card.Body>\r\n                                <Card.Title>{city.city}</Card.Title>\r\n                                <p>Country: {city.country}</p>\r\n                                <p>Population: {city.population}</p>\r\n                                <Button onClick={() => handleSaveCity(city.cityId)}>Save</Button>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    )\r\n                })}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SearchCity;","D:\\molly\\Bootcamp\\Projects\\Project3\\ThePlacesYoullGo\\client\\src\\pages\\Profile.js",[],["91","92"],"D:\\molly\\Bootcamp\\Projects\\Project3\\ThePlacesYoullGo\\client\\src\\pages\\Bucket.js",[],"D:\\molly\\Bootcamp\\Projects\\Project3\\ThePlacesYoullGo\\client\\src\\pages\\Signup.js",["93"],"import React, { useState } from 'react';\r\nimport { useMutation } from '@apollo/client';\r\nimport { ADD_USER } from '../utils/mutations';\r\nimport { Form, Button, Alert } from 'react-bootstrap';\r\n\r\n\r\nimport Auth from '../utils/auth';\r\n\r\nconst SignupForm = () => {\r\n  // set initial form state\r\n  const [userFormData, setUserFormData] = useState({ username: '', email: '', password: '' });\r\n  // set state for form validation\r\n  const [validated] = useState(false);\r\n  // set state for alert\r\n  const [showAlert, setShowAlert] = useState(false);\r\n\r\n  const [addUser, {error}] = useMutation(ADD_USER);\r\n\r\n  const handleInputChange = (event) => {\r\n    const { name, value } = event.target;\r\n    setUserFormData({ ...userFormData, [name]: value });\r\n  };\r\n\r\n  const handleFormSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    // check if form has everything (as per react-bootstrap docs)\r\n    const form = event.currentTarget;\r\n    if (form.checkValidity() === false) {\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n    }\r\n\r\n    try {\r\n      const { data } = await addUser({\r\n        variables: { ...userFormData}\r\n      });\r\n\r\n      console.log(data);\r\n      Auth.login(data.addUser.token);\r\n    } catch (err) {\r\n      console.error(err);\r\n      setShowAlert(true);\r\n    }\r\n\r\n    setUserFormData({\r\n      username: '',\r\n      email: '',\r\n      password: '',\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {/* This is needed for the validation functionality above */}\r\n      <Form noValidate validated={validated} onSubmit={handleFormSubmit}>\r\n        {/* show alert if server response is bad */}\r\n        <Alert dismissible onClose={() => setShowAlert(false)} show={showAlert} variant='danger'>\r\n          Something went wrong with your signup!\r\n        </Alert>\r\n\r\n        <Form.Group>\r\n          <Form.Label htmlFor='username'>Username</Form.Label>\r\n          <Form.Control\r\n            type='text'\r\n            placeholder='Your username'\r\n            name='username'\r\n            onChange={handleInputChange}\r\n            value={userFormData.username}\r\n            required\r\n          />\r\n          <Form.Control.Feedback type='invalid'>Username is required!</Form.Control.Feedback>\r\n        </Form.Group>\r\n\r\n        <Form.Group>\r\n          <Form.Label htmlFor='email'>Email</Form.Label>\r\n          <Form.Control\r\n            type='email'\r\n            placeholder='Your email address'\r\n            name='email'\r\n            onChange={handleInputChange}\r\n            value={userFormData.email}\r\n            required\r\n          />\r\n          <Form.Control.Feedback type='invalid'>Email is required!</Form.Control.Feedback>\r\n        </Form.Group>\r\n\r\n        <Form.Group>\r\n          <Form.Label htmlFor='password'>Password</Form.Label>\r\n          <Form.Control\r\n            type='password'\r\n            placeholder='Your password'\r\n            name='password'\r\n            onChange={handleInputChange}\r\n            value={userFormData.password}\r\n            required\r\n          />\r\n          <Form.Control.Feedback type='invalid'>Password is required!</Form.Control.Feedback>\r\n        </Form.Group>\r\n        <Button\r\n          disabled={!(userFormData.username && userFormData.email && userFormData.password)}\r\n          type='submit'\r\n          variant='success'>\r\n          Submit\r\n        </Button>\r\n      </Form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SignupForm;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// ...........................................................\r\n\r\n// import React, { useState } from 'react';\r\n// import { Link } from 'react-router-dom';\r\n\r\n// import { useMutation } from '@apollo/client';\r\n// import { ADD_USER } from '../utils/mutations';\r\n\r\n// import Auth from '../utils/auth';\r\n\r\n// const Signup = () => {\r\n//   const [formState, setFormState] = useState({\r\n//     username: '',\r\n//     email: '',\r\n//     password: '',\r\n//   });\r\n//   const [addUser, { error, data }] = useMutation(ADD_USER);\r\n\r\n//   const handleChange = (event) => {\r\n//     const { name, value } = event.target;\r\n\r\n//     setFormState({\r\n//       ...formState,\r\n//       [name]: value,\r\n//     });\r\n//   };\r\n\r\n//   const handleFormSubmit = async (event) => {\r\n//     event.preventDefault();\r\n//     console.log(formState);\r\n\r\n//     try {\r\n//       const { data } = await addUser({\r\n//         variables: { ...formState },\r\n//       });\r\n\r\n//       Auth.login(data.addUser.token);\r\n//     } catch (e) {\r\n//       console.error(e);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <main className=\"flex-row justify-center mb-4\">\r\n//       <div className=\"col-12 col-lg-10\">\r\n//         <div className=\"card\">\r\n//           <h4 className=\"card-header bg-dark text-light p-2\">Sign Up</h4>\r\n//           <div className=\"card-body\">\r\n//             {data ? (\r\n//               <p>\r\n//                 Success! You may now head{' '}\r\n//                 <Link to=\"/\">back to the homepage.</Link>\r\n//               </p>\r\n//             ) : (\r\n//               <form onSubmit={handleFormSubmit}>\r\n//                 <input\r\n//                   className=\"form-input\"\r\n//                   placeholder=\"Your username\"\r\n//                   name=\"username\"\r\n//                   type=\"text\"\r\n//                   value={formState.name}\r\n//                   onChange={handleChange}\r\n//                 />\r\n//                 <input\r\n//                   className=\"form-input\"\r\n//                   placeholder=\"Your email\"\r\n//                   name=\"email\"\r\n//                   type=\"email\"\r\n//                   value={formState.email}\r\n//                   onChange={handleChange}\r\n//                 />\r\n//                 <input\r\n//                   className=\"form-input\"\r\n//                   placeholder=\"******\"\r\n//                   name=\"password\"\r\n//                   type=\"password\"\r\n//                   value={formState.password}\r\n//                   onChange={handleChange}\r\n//                 />\r\n//                 <button\r\n//                   className=\"btn btn-block btn-primary\"\r\n//                   style={{ cursor: 'pointer' }}\r\n//                   type=\"submit\"\r\n//                 >\r\n//                   Submit\r\n//                 </button>\r\n//               </form>\r\n//             )}\r\n\r\n//             {error && (\r\n//               <div className=\"my-3 p-3 bg-danger text-white\">\r\n//                 {error.message}\r\n//               </div>\r\n//             )}\r\n//           </div>\r\n//         </div>\r\n//       </div>\r\n//     </main>\r\n//   );\r\n// };\r\n\r\n// export default Signup;\r\n","D:\\molly\\Bootcamp\\Projects\\Project3\\ThePlacesYoullGo\\client\\src\\components\\Navbar.js",[],"D:\\molly\\Bootcamp\\Projects\\Project3\\ThePlacesYoullGo\\client\\src\\components\\Footer.js",[],"D:\\molly\\Bootcamp\\Projects\\Project3\\ThePlacesYoullGo\\client\\src\\components\\Carousel.js",[],"D:\\molly\\Bootcamp\\Projects\\Project3\\ThePlacesYoullGo\\client\\src\\utils\\mutations.js",[],"D:\\molly\\Bootcamp\\Projects\\Project3\\ThePlacesYoullGo\\client\\src\\utils\\API.js",[],"D:\\molly\\Bootcamp\\Projects\\Project3\\ThePlacesYoullGo\\client\\src\\utils\\auth.js",[],"D:\\molly\\Bootcamp\\Projects\\Project3\\ThePlacesYoullGo\\client\\src\\components\\bucket\\BucketForm.js",[],"D:\\molly\\Bootcamp\\Projects\\Project3\\ThePlacesYoullGo\\client\\src\\components\\bucket\\Bucket.js",[],"D:\\molly\\Bootcamp\\Projects\\Project3\\ThePlacesYoullGo\\client\\src\\utils\\queries.js",[],"D:\\molly\\Bootcamp\\Projects\\Project3\\ThePlacesYoullGo\\client\\src\\pages\\MyPlaces.js",["94","95","96"],"import React, { useState, useEffect } from 'react';\r\nimport { useQuery, useMutation } from '@apollo/client';\r\nimport {QUERY_ME} from '../utils/queries';\r\nimport { Container, Card } from 'react-bootstrap';\r\n\r\nconst SavedCities = () => {\r\n  const { loading, data } = useQuery(QUERY_ME);\r\n\r\n  const [userData, setData] = useState(loading ? null : data.me);\r\n\r\n  if(!userData) {\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className='text-light bg-dark'>\r\n        <Container>\r\n          <h1>Viewing saved cities!</h1>\r\n        </Container>\r\n      </div>\r\n      <Container>\r\n        <h2>\r\n          {userData.savedCities.length\r\n            ? `Viewing ${userData.savedCities.length} saved ${userData.savedCities.length === 1 ? 'city' : 'cities'}:`\r\n            : 'You have no saved cities!'}\r\n        </h2>\r\n        <div>\r\n          {userData.savedCities.map((city) => {\r\n            return (\r\n              <Card key={city.cityId} border='dark'>\r\n                <Card.Body>\r\n                  <Card.Title>{city.city}</Card.Title>\r\n                  <p>Country: {city.country}</p>\r\n                  <p>Population: {city.population}</p>\r\n                </Card.Body>\r\n              </Card>\r\n            );\r\n          })}\r\n        </div>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SavedCities;","D:\\molly\\Bootcamp\\Projects\\Project3\\ThePlacesYoullGo\\client\\src\\utils\\localstorage.js",[],{"ruleId":"97","replacedBy":"98"},{"ruleId":"99","replacedBy":"100"},{"ruleId":"101","severity":1,"message":"102","line":5,"column":8,"nodeType":"103","messageId":"104","endLine":5,"endColumn":12},{"ruleId":"101","severity":1,"message":"105","line":17,"column":23,"nodeType":"103","messageId":"104","endLine":17,"endColumn":28},{"ruleId":"97","replacedBy":"106"},{"ruleId":"99","replacedBy":"107"},{"ruleId":"101","severity":1,"message":"105","line":17,"column":20,"nodeType":"103","messageId":"104","endLine":17,"endColumn":25},{"ruleId":"101","severity":1,"message":"108","line":1,"column":27,"nodeType":"103","messageId":"104","endLine":1,"endColumn":36},{"ruleId":"101","severity":1,"message":"109","line":2,"column":20,"nodeType":"103","messageId":"104","endLine":2,"endColumn":31},{"ruleId":"101","severity":1,"message":"110","line":9,"column":20,"nodeType":"103","messageId":"104","endLine":9,"endColumn":27},"no-native-reassign",["111"],"no-negated-in-lhs",["112"],"no-unused-vars","'Auth' is defined but never used.","Identifier","unusedVar","'error' is assigned a value but never used.",["111"],["112"],"'useEffect' is defined but never used.","'useMutation' is defined but never used.","'setData' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]

